import practice.problems.Arrays.MaximumSubarray;
import practice.problems.Arrays.MedianOf2SortedArrays;
import practice.problems.Arrays.TrappingRainWater;
import practice.problems.Arrays.TwoSum;
import practice.problems.DynamicProgramming.*;
import practice.problems.Graphs.BreadthFirstApproach;
import practice.problems.Graphs.DepthFirstApproach;
import practice.problems.Sorting.MajorityElement;
import practice.problems.Strings.*;

public class Main {
    public static void main(String[] args) {

        System.out.println("MaximumSubarray:");
        MaximumSubarray max = new MaximumSubarray();
        max.executeMaximumSubarray();
        System.out.println("=======================");
        System.out.println("Isomorphic Strings:");
        IsomorphicStrings is = new IsomorphicStrings();
        is.executeIsomorphicStrings();
        System.out.println("=======================");
        System.out.println("LongestNonRepeatingSubstring:");
        LongestNonRepeatingSubstring lnrs = new LongestNonRepeatingSubstring();
        lnrs.executeLongestNonRepeatingSubstring();
        System.out.println("=======================");
        System.out.println("FirstUniqueCharacterInaString:");
        FirstUniqueCharacterInaString fs = new FirstUniqueCharacterInaString();
        fs.executeFirstUniqueCharacterInaString();
        System.out.println("=======================");
        System.out.println("MajorityElement:");
        MajorityElement majorityElement = new MajorityElement();
        majorityElement.executeMajorityElement();
        System.out.println("=======================");
        System.out.println("MedianOf2SortedArrays: ");
        MedianOf2SortedArrays medianOf2SortedArrays = new MedianOf2SortedArrays();
        medianOf2SortedArrays.executeMedianOf2SortedArrays();
        System.out.println("=======================");
        System.out.println("BreadthFirstApproach: ");
        BreadthFirstApproach bfs = new BreadthFirstApproach();
        bfs.executeBreadthFirstApproach();
        System.out.println("=======================");
        System.out.println("DepthFirstApproach: ");
        DepthFirstApproach dfs = new DepthFirstApproach();
        dfs.executeDepthFirstApproach();
        System.out.println("=======================");
        System.out.println("FibonacciSeries: ");
        FibonacciSeries series = new FibonacciSeries();
        series.executeFibonacciSeries();
        System.out.println("=======================");
        System.out.println("LongestCommonSubsequence: ");
        LongestCommonSubsequence subsequence = new LongestCommonSubsequence();
        subsequence.executeLongestCommonSubsequence();
        System.out.println("=======================");
        System.out.println("TrappingRainWater: ");
        TrappingRainWater trap = new TrappingRainWater();
        trap.executeTrappingRainWater();
        System.out.println("=======================");
        System.out.println("TwoSum: ");
        TwoSum twoSum = new TwoSum();
        twoSum.executeTwoSum();
        System.out.println("=======================");
        System.out.println("ValidParantheses: ");
        ValidParantheses parantheses = new ValidParantheses();
        parantheses.executeValidParantheses();
        System.out.println("=======================");
        System.out.println("ClimbingStairs:");
        ClimbingStairs stairs = new ClimbingStairs();
        stairs.executeClimbingStairs();
        System.out.println("=======================");
        System.out.println("HouseRobber:");
        HouseRobber robber = new HouseRobber();
        robber.executeHouseRobber();
        System.out.println("=======================");
        System.out.println("IsSubsequence: ");
        IsSubsequence seq = new IsSubsequence();
        seq.executeIsSubsequence();
        System.out.println("=======================");
        System.out.println("CoinChange: ");
        CoinChange coinChange = new CoinChange();
        coinChange.executeCoinChange();
    }
}